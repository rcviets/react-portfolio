{"version":3,"sources":["images/portrait.png","images/celblox.png","images/camion.png","images/initialD.png","images/bamazon.png","components/avatar/index.js","components/social/index.js","components/title/index.js","components/card/index.js","components/footer/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Hero","className","src","avatar","alt","Socials","Container","Row","Col","md","Button","href","target","variant","icon","faGithub","size","color","faLinkedin","Title","JobCards","Image","Celblox","thumbnail","Card","style","width","Body","Subtitle","Text","Link","Camion","InitialD","Bamazon","Footer","fluid","faRegistered","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a8bdc5c9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/portrait.71abafe0.png\";","module.exports = __webpack_public_path__ + \"static/media/celblox.4dc33d65.png\";","module.exports = __webpack_public_path__ + \"static/media/camion.3cd984b1.png\";","module.exports = __webpack_public_path__ + \"static/media/initialD.f36c2819.png\";","module.exports = __webpack_public_path__ + \"static/media/bamazon.3f1504f9.png\";","import React from \"react\";\r\nimport avatar from \"../../images/portrait.png\";\r\nimport \"./style.css\";\r\n\r\nconst Hero = () => {\r\n    return (\r\n        <div className=\"hero-div\">\r\n            <img className=\"hero-img\" src={avatar} alt=\"Avatar\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Hero;","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/button\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\nimport \"./style.css\";\r\n\r\nconst Socials = () => {\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Button href=\"https://github.com/rcviets\" target=\"_blank\" variant=\"link\">\r\n                        <FontAwesomeIcon className=\"social-icon\" icon={faGithub} size={\"2x\"} color={\"#FAC8CD\"} />\r\n                    </Button>\r\n                    <Button href=\"https://www.linkedin.com/in/randaviets/\" target=\"_blank\" variant=\"link\">\r\n                        <FontAwesomeIcon className=\"social-icon\" icon={faLinkedin} size={\"2x\"} color={\"#FAC8CD\"} />\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Socials;","import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport \"./style.css\";\r\n\r\nconst Title = () => {\r\n    return (\r\n        <Container>\r\n            <h4 className=\"title-text\">Hi! I'm Randa Viets</h4>\r\n            <p className=\"title-text\">A Javascript and React Developer</p>\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\nexport default Title;","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Celblox from \"../../images/celblox.png\";\r\nimport Camion from \"../../images/camion.png\";\r\nimport InitialD from \"../../images/initialD.png\";\r\nimport Bamazon from \"../../images/bamazon.png\";\r\nimport \"./style.css\";\r\n\r\nconst JobCards = () => {\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col md={\"3\"}>\r\n                    <Image className=\"job-image-celblox\" src={Celblox} thumbnail />\r\n                    <Card className=\"job-card\" style={{ width: '14rem' }}>\r\n                        <Card.Body>\r\n                            <Card.Title className=\"job-title\">CelBlox</Card.Title>\r\n                            <Card.Subtitle className=\"mb-2 text-muted\">Current Project</Card.Subtitle>\r\n                            <Card.Text className =\"job-description\">\r\n                                In process React web app for a construction material manufacturer website.\r\n                            </Card.Text>\r\n                            <Card.Link href=\"https://upbeat-brown-2775c3.netlify.app/\" target=\"_blank\">Production Site</Card.Link>\r\n                            <Card.Link href=\"https://github.com/rcviets/celblox\" target=\"_blank\">Code</Card.Link>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col md={\"3\"}>\r\n                    <Image className=\"job-image\" src={Camion} thumbnail />\r\n                    <Card className=\"job-card\" style={{ width: '14rem' }}>\r\n                        <Card.Body>\r\n                            <Card.Title className=\"job-title\">Camion</Card.Title>\r\n                            <Card.Subtitle className=\"mb-2 text-muted\">Group Project</Card.Subtitle>\r\n                            <Card.Text className=\"job-description\">\r\n                                React and MongoDB web app with unique user accounts that can create and claim product.\r\n                            </Card.Text>    \r\n                            <Card.Link href=\"https://camion-app.herokuapp.com/\" target=\"_blank\">Production Site</Card.Link>\r\n                            <Card.Link href=\"https://github.com/rcviets/Camion\" target =\"_blank\">Code</Card.Link>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col md={\"3\"}>\r\n                    <Image className=\"job-image\" src={InitialD} thumbnail />\r\n                    <Card className=\"job-card\" style={{ width: '14rem' }}>\r\n                        <Card.Body>\r\n                            <Card.Title className=\"job-title\">Initial D Trivia</Card.Title>\r\n                            <Card.Subtitle className=\"mb-2 text-muted\">Video Game</Card.Subtitle>\r\n                            <Card.Text className=\"job-description\">\r\n                                Vanilla javascript game with timed questions, score tracker, and win/loss scenario.\r\n                            </Card.Text>\r\n                            <Card.Link href=\"https://rcviets.github.io/TriviaGame/\" target=\"_blank\">Production Site</Card.Link>\r\n                            <Card.Link href=\"https://github.com/rcviets/TriviaGame\" target=\"_blank\">Code</Card.Link>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col md={\"3\"}>\r\n                    <Image className=\"job-image\" src={Bamazon} thumbnail />\r\n                    <Card className=\"job-card\" style={{ width: '14rem' }}>\r\n                        <Card.Body>\r\n                            <Card.Title className=\"job-title\">Bamazon</Card.Title>\r\n                            <Card.Subtitle className=\"mb-2 text-muted\">Command Line Client</Card.Subtitle>\r\n                            <Card.Text className=\"job-description\">\r\n                                Node based server and MySQL database that track store inventory and cost of purchases.\r\n                            </Card.Text>\r\n                            <Card.Link href=\"https://github.com/rcviets/bamazon\" target=\"_blank\">Code</Card.Link>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n\r\n    );\r\n};\r\n\r\nexport default JobCards;","import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faRegistered } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./style.css\";\r\n\r\nconst Footer = () => (\r\n  <Container className=\"footer\" fluid>\r\n    <p>Randamus (w)Rites React  <FontAwesomeIcon icon={faRegistered} size={\"1x\"} color={\"#FAC8CD\"} /></p>\r\n  </Container>\r\n);\r\n\r\nexport default Footer;","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Hero from \"./components/avatar\";\nimport Socials from \"./components/social\";\nimport Title from \"./components/title\";\nimport JobCards from \"./components/card\";\nimport Footer from \"./components/footer\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div>\n      <Container>\n        <Row>\n          <Socials />\n        </Row>\n      </Container>\n      <Row>\n        <Col md={4}></Col>\n        <Col md={4}>\n          <Hero />\n        </Col>\n        <Col md={4}></Col>\n      </Row>\n      <Row>\n        <Col md={4}></Col>\n        <Col md={4}>\n          <Title />\n        </Col>\n        <Col md={4}></Col>\n      </Row>\n        <Row>\n            <JobCards />\n        </Row>\n        <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}